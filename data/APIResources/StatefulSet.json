{
    "description": "StatefulSet represents a set of pods with consistent identities. Identities are defined as: - Network: A single stable DNS and hostname. - Storage: As many VolumeClaims as requested. The StatefulSet guarantees that a given network identity will always map to the same storage identity.",
    "json": {
        "apiVersion": "apps/v1",
        "kind": "StatefulSet",
        "metadata": "<COMPONENT.Metadata>",
        "spec": {
            "podManagementPolicy": "<string>",
            "replicas": "<integer>",
            "revisionHistoryLimit": "<integer>",
            "selector": "<COMPONENT.Selector>",
            "serviceName": "<string>",
            "template": {
                "metadata": "<COMPONENT.Metadata>",
                "spec": {
                    "activeDeadlineSeconds": "<integer>",
                    "affinity": {
                        "nodeAffinity": "<COMPONENT.NodeAffinity>",
                        "podAffinity": "<COMPONENT.PodAffinity>",
                        "podAntiAffinity": "<COMPONENT.PodAntiAffinity>"
                    },
                    "automountServiceAccountToken": "<boolean>",
                    "containers": "<[]COMPONENT.Container>",
                    "dnsConfig": "<COMPONENT.DNSConfig>",
                    "dnsPolicy": "<string>",
                    "enableServiceLinks": "<boolean>",
                    "hostAliases": "<[]COMPONENT.HostAlias>",
                    "hostIPC": "<boolean>",
                    "hostNetwork": "<boolean>",
                    "hostPID": "<boolean>",
                    "hostname": "<string>",
                    "imagePullSecrets": "<[]COMPONENT.ImagePullSecret>",
                    "initContainers": "<[]COMPONENT.Container>",
                    "nodeName": "<string>",
                    "nodeSelector": "<map[string]string>",
                    "preemptionPolicy": "<string>",
                    "priority": "<integer>",
                    "priorityClassName": "<string>",
                    "readinessGates": "<[]COMPONENT.ReadinessGate>",
                    "restartPolicy": "<string>",
                    "runtimeClassName": "<string>",
                    "schedulerName": "<string>",
                    "securityContext": "<COMPONENT.SecurityContext>",
                    "serviceAccount": "<string>",
                    "serviceAccountName": "<string>",
                    "shareProcessNamespace": "<boolean>",
                    "subdomain": "<string>",
                    "terminationGracePeriodSeconds": "<integer>",
                    "tolerations": "<[]COMPONENT.Tolerations>",
                    "volumes": "<[]COMPONENT.Volume>"
                }
            },
            "updateStrategy": {
                "rollingUpdate": {
                    "partition": "<integer>"
                },
                "type": "<string>"
            },
            "volumeClaimTemplates": "<[]COMPONENT.VolumeClaimTemplate>"
        }
    }
}